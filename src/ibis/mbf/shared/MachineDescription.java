package ibis.mbf.shared;

import java.io.Serializable;

import ibis.ipl.IbisIdentifier;
import ibis.ipl.ReceivePortIdentifier;

public class MachineDescription implements Serializable {
    
    // Generated by eclipse
    private static final long serialVersionUID = -2122563043028437009L;
 
    protected final ReceivePortIdentifier receiveID;
    protected final IbisIdentifier ibisID;
    protected final String port;
    
    public MachineDescription(ReceivePortIdentifier id) { 
        this.receiveID = id;
        this.ibisID = null;
        this.port = null;
    }
    
    public MachineDescription(IbisIdentifier id, String port) { 
        this.ibisID = id;
        this.port = port;
        this.receiveID = null;
    }
    
    public MachineDescription(MachineDescription other) { 
        this.receiveID = other.receiveID;
        this.ibisID = other.ibisID;
        this.port = other.port;
    }
    
    public boolean equals(Object o) {
        
        if (!(o instanceof MachineDescription)) { 
            return false;
        }
        
        MachineDescription other = (MachineDescription) o;
        
        if (receiveID != null) { 
            if (other.receiveID != null) { 
                return receiveID.equals(other.receiveID);
            } else { 
                return receiveID.ibisIdentifier().equals(other.ibisID) &&
                    receiveID.name().equals(other.port);
            } 
        } else { 
            if (other.receiveID != null) { 
                return ibisID.equals(other.receiveID.ibisIdentifier()) && 
                    port.equals(other.receiveID.name());
            } else { 
                return ibisID.equals(other.ibisID) && port.equals(other.port);
            } 
        }            
    }
    
    public int hashCode() { 

        // Note: this method should return the same result for two 
        // MachineDescriptions that represent the same ibis + receiveport, 
        // even if one description uses a ReceivePortIdentifier and the other 
        // uses an IbisIdentifier + port. As a result, we can only use the 
        // hashcode of the IbisIdentifier, because that should be the same in 
        // both cases.

        if (receiveID != null) { 
            return receiveID.ibisIdentifier().hashCode();
        } else { 
            return ibisID.hashCode();
        }
    }
    
}
